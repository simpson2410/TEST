@using Common
@model PagedResultBase
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var urlTemplate = Url.Action() + "?page={0}";
    var request = ViewContext.HttpContext.Request;
    var pre = Model.CurrentPage - 1;
    var next = Model.CurrentPage + 1;
    foreach (var key in request.Query.Keys)
    {
        if (key == "page")
        {
            continue;
        }

        urlTemplate += "&" + key + "=" + request.Query[key];
    }

    var startIndex = Math.Max(Model.CurrentPage - 5, 1);
    var finishIndex = Math.Min(Model.CurrentPage + 5, Model.PageCount);
}

@if (Model.PageCount > 1)
{
    <div class="row">
       
        <div class="col-sm-12 ">
                  <div class="dataTables_paginate paging_simple_numbers" id="DataTables_Table_0_paginate">
                      <ul class="pagination">

                          <li class="page-item @prevDisabled"><a class="page-link" href="@urlTemplate.Replace("{0}", pre.ToString())">Trang trước</a></li>
                          @for (int i = startIndex; i <= finishIndex; i++)
                          {
                              @if (i == Model.CurrentPage)
                              {
                                  <li class="page-item active"><a class="page-link" href="">@i</a></li>
                              }
                              else
                              {
                                  <li class="page-item"><a class="page-link" href="@urlTemplate.Replace("{0}", i.ToString())">@i</a></li>


                              }
                          }
                          <li class="page-item @nextDisabled"><a class="page-link" href="@urlTemplate.Replace("{0}", next.ToString())">Trang sau</a></li>

                      </ul>
                  </div>
        </div>
    </div>
 
}

