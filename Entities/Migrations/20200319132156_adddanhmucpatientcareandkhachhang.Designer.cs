// <auto-generated />
using System;
using BioNet.Entities.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BioNet.Entities.Migrations
{
    [DbContext(typeof(BioNetContext))]
    [Migration("20200319132156_adddanhmucpatientcareandkhachhang")]
    partial class adddanhmucpatientcareandkhachhang
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucKhachhang.DanhMucThongTinNguoiThan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChiNguoiThan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailNguoiThan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinhNguoiThan")
                        .HasColumnType("bit");

                    b.Property<int>("IdKhachHang")
                        .HasColumnType("int");

                    b.Property<int>("IdLoaiNguoiThan")
                        .HasColumnType("int");

                    b.Property<int>("IdPhuongXa")
                        .HasColumnType("int");

                    b.Property<string>("NgaySinhNguoiThan")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("SDTNguoiThan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiThan")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("IdKhachHang");

                    b.HasIndex("IdLoaiNguoiThan");

                    b.HasIndex("IdPhuongXa");

                    b.ToTable("DanhMucThongTinNguoiThans");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucKhachhang.DanhmucLoainguoithan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenLoaiNguoiThan")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("DanhmucLoainguoithans");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucKhachhang.DanhmucThongtinKhachhang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<int>("IdPhuongPhapSinh")
                        .HasColumnType("int");

                    b.Property<int>("IdPhuongXa")
                        .HasColumnType("int");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("NgaySinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiSinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("IdPhuongPhapSinh");

                    b.HasIndex("IdPhuongXa");

                    b.ToTable("DanhmucThongtinKhachhangs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucChiTietDanhGiaChatLuongMau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhMucDanhGiaChatLuongMauNghiepVuId")
                        .HasColumnType("int");

                    b.Property<int?>("DanhmucDanhgiaChatluongMauId")
                        .HasColumnType("int");

                    b.Property<int>("IdDanhGiaChatLuongMau")
                        .HasColumnType("int");

                    b.Property<int>("IdDanhGiaChatLuongMauNghiepVu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucDanhGiaChatLuongMauNghiepVuId");

                    b.HasIndex("DanhmucDanhgiaChatluongMauId");

                    b.ToTable("DanhMucChiTietDanhGiaChatLuongMau");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucChiTietKetQuaThongSoXN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhMucChiTietKetQuaXN_SLSSId")
                        .HasColumnType("int");

                    b.Property<string>("GiaTriCuoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriMax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriMin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriTrungBinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTri_L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTri_L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdChiTietKQXN_SLSS")
                        .HasColumnType("int");

                    b.Property<string>("KetLuanThongSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetLuanThongSoEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<bool>("isGiaTri")
                        .HasColumnType("bit");

                    b.Property<bool>("isNguyCo")
                        .HasColumnType("bit");

                    b.Property<bool>("isXoa")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucChiTietKetQuaXN_SLSSId");

                    b.ToTable("DanhMucChiTietKetQuaThongSoXN");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucChiTietKetQuaXN_SLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhMucKetQuaXN_SLSSId")
                        .HasColumnType("int");

                    b.Property<int?>("DanhmucDichvuSLSSId")
                        .HasColumnType("int");

                    b.Property<string>("DeNghi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeNghiEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDichVu_SLSS")
                        .HasColumnType("int");

                    b.Property<int>("IdKetQuaXN_SLSS")
                        .HasColumnType("int");

                    b.Property<string>("KetLuanTong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetLuanTongEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetLuan_L1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetLuan_L1En")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetLuan_L2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetLuan_L2En")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayCoKetQua")
                        .HasColumnType("datetime2");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<bool>("isDongBo")
                        .HasColumnType("bit");

                    b.Property<bool>("isNguyCo")
                        .HasColumnType("bit");

                    b.Property<bool>("isTraKetQua")
                        .HasColumnType("bit");

                    b.Property<bool>("isXN_L2")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucKetQuaXN_SLSSId");

                    b.HasIndex("DanhmucDichvuSLSSId");

                    b.ToTable("DanhMucChiTietKetQuaXN_SLSS");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucDanhGiaChatLuongMauNghiepVu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhMucTiepNhanId")
                        .HasColumnType("int");

                    b.Property<int>("IdNhanVienDanhGia")
                        .HasColumnType("int");

                    b.Property<int>("IdTiepNhan")
                        .HasColumnType("int");

                    b.Property<string>("LyDo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDat")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucTiepNhanId");

                    b.ToTable("DanhMucDanhGiaChatLuongMauNghiepVu");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucKetQuaXN_SLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChuanDoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DanhmucNguoidungId")
                        .HasColumnType("int");

                    b.Property<int>("IdNhanVienTraKetQua")
                        .HasColumnType("int");

                    b.Property<string>("MaXetNghiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayChiDinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayCoKetQua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayLamXetNghiem")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTiepNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTraKetQua")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDongBoPDF")
                        .HasColumnType("bit");

                    b.Property<bool>("isDuyet")
                        .HasColumnType("bit");

                    b.Property<bool>("isNguyCoCao")
                        .HasColumnType("bit");

                    b.Property<bool>("isTraKetQua")
                        .HasColumnType("bit");

                    b.Property<bool>("isXetNghiemLai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DanhmucNguoidungId");

                    b.ToTable("DanhMucKetQuaXN_SLSS");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucPhieuSangLoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Cancel")
                        .HasColumnType("bit");

                    b.Property<int?>("DanhMucTrangThaiMauId")
                        .HasColumnType("int");

                    b.Property<int?>("DanhmucChedodinhduongId")
                        .HasColumnType("int");

                    b.Property<int?>("DanhmucNguoidungId")
                        .HasColumnType("int");

                    b.Property<int?>("DanhmucThongtinKhachhangId")
                        .HasColumnType("int");

                    b.Property<int?>("DanhmucTinhtrangId")
                        .HasColumnType("int");

                    b.Property<int?>("DanhmucVitrilaymauId")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi_En")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCheDoDinhDuong")
                        .HasColumnType("int");

                    b.Property<int>("IdKhachHang")
                        .HasColumnType("int");

                    b.Property<int>("IdMapDonViCoSo_TrungTam")
                        .HasColumnType("int");

                    b.Property<int>("IdNguoiDungHuy")
                        .HasColumnType("int");

                    b.Property<int>("IdNguoiDungTao")
                        .HasColumnType("int");

                    b.Property<int>("IdNhanVienLayMau")
                        .HasColumnType("int");

                    b.Property<int>("IdTinhTrang")
                        .HasColumnType("int");

                    b.Property<int>("IdTrangThaiMau")
                        .HasColumnType("int");

                    b.Property<int>("IdViTriLayMau")
                        .HasColumnType("int");

                    b.Property<string>("KhoaPhong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoaPhong_En")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaPhieuSangLoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MapDonvicosoTrungtamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayHuyPhieu")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTaoPhieu")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTruyenMau")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiLayMau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDTNhanVienLayMau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SLTruyenMau")
                        .HasColumnType("int");

                    b.Property<string>("TenBacSi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBacSi_En")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucTrangThaiMauId");

                    b.HasIndex("DanhmucChedodinhduongId");

                    b.HasIndex("DanhmucNguoidungId");

                    b.HasIndex("DanhmucThongtinKhachhangId");

                    b.HasIndex("DanhmucTinhtrangId");

                    b.HasIndex("DanhmucVitrilaymauId");

                    b.HasIndex("MapDonvicosoTrungtamId");

                    b.ToTable("DanhMucPhieuSangLoc");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucTiepNhan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhMucLoaiTiepNhanId")
                        .HasColumnType("int");

                    b.Property<int?>("DanhMucPhieuSangLocId")
                        .HasColumnType("int");

                    b.Property<int?>("DanhmucNguoidungId")
                        .HasColumnType("int");

                    b.Property<int>("IdLoaiTiepNhan")
                        .HasColumnType("int");

                    b.Property<int>("IdNhanVienTiepNhan")
                        .HasColumnType("int");

                    b.Property<int>("IdPhieuSangLoc")
                        .HasColumnType("int");

                    b.Property<string>("MaTiepNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTiepNhan")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDaDanhGia")
                        .HasColumnType("bit");

                    b.Property<bool>("isDaNhapLieu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucLoaiTiepNhanId");

                    b.HasIndex("DanhMucPhieuSangLocId");

                    b.HasIndex("DanhmucNguoidungId");

                    b.ToTable("DanhMucTiepNhan");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucChitietGoiDVXNPatientCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhmucDichvuPatientCareId")
                        .HasColumnType("int");

                    b.Property<int>("IdDichVuXetNghiemNP")
                        .HasColumnType("int");

                    b.Property<int>("IdGoiXetNghiemP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DanhmucDichvuPatientCareId");

                    b.HasIndex("IdDichVuXetNghiemNP");

                    b.HasIndex("IdGoiXetNghiemP");

                    b.ToTable("DanhmucChitietGoiDVXNPatientCares");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucDichvuPatientCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("GiaDichVuP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<string>("MaDichVuP")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TenDichVuP")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("TenHienThiDichVuP")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("DanhmucDichvuPatientCares");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucDichvuXNPatientCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<int>("IdNhomXetNghiemP")
                        .HasColumnType("int");

                    b.Property<string>("MaDichVuXetNghiemP")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TenDichVuXetNghiemP")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("IdNhomXetNghiemP");

                    b.ToTable("DanhmucDichvuXNPatientCares");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucDonvidoPatientCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaDonViDoP")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TenDonViDoP")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("DanhmucDonvidoPatientCares");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucGoiXNTheobenhPatientCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdDichVuP")
                        .HasColumnType("int");

                    b.Property<string>("MaGoiXetNghiemP")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TenGoiXetNghiemP")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("IdDichVuP");

                    b.ToTable("DanhmucGoiXNTheobenhPatientCares");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucLoaiXNPatientCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<int>("IdMenu")
                        .HasColumnType("int");

                    b.Property<string>("MaLoaiXetNghiemP")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<string>("TenLoaiXetNghiemP")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("IdMenu");

                    b.ToTable("DanhmucLoaiXNPatientCares");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucMenuXNPatientCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MenuCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("DanhmucMenuXNPatientCares");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucNhomXNPatientCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<int>("IdLoaiXetNghiemP")
                        .HasColumnType("int");

                    b.Property<string>("MaNhomXetNghiemP")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<string>("TenNhomXetNghiemP")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiXetNghiemP");

                    b.ToTable("DanhmucNhomXNPatientCares");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucThongsoXNDichvuPatientCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdDichVuXetNghiemP")
                        .HasColumnType("int");

                    b.Property<int>("IdDonViDoP")
                        .HasColumnType("int");

                    b.Property<int>("IdThongSoXetNghiemP")
                        .HasColumnType("int");

                    b.Property<int>("LamTron")
                        .HasColumnType("int");

                    b.Property<string>("NguyCoCao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguyCoCaoEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguyCoThap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguyCoThapEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDichVuXetNghiemP");

                    b.HasIndex("IdDonViDoP");

                    b.HasIndex("IdThongSoXetNghiemP");

                    b.ToTable("DanhmucThongsoXNDichvuPatientCares");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucThongsoXNPatientCare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhmucTrungtamId")
                        .HasColumnType("int");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<string>("MaThongSoXetNghiemP")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TenHienThiThongSoXetNghiemP")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("TenThongSoXetNghiemP")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("DanhmucTrungtamId");

                    b.ToTable("DanhmucThongsoXNPatientCares");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.CauhinhthongsoXNSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GiaTri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriMax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriMin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriTrungBinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDieuKien")
                        .HasColumnType("int");

                    b.Property<int>("IdSoSanh")
                        .HasColumnType("int");

                    b.Property<int>("IdThongSoXetNghiemSLSS")
                        .HasColumnType("int");

                    b.Property<int>("LamTron")
                        .HasColumnType("int");

                    b.Property<string>("NguyCoCao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguyCoCaoEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguyCoThap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguyCoThapEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDieuKien");

                    b.HasIndex("IdSoSanh");

                    b.HasIndex("IdThongSoXetNghiemSLSS");

                    b.ToTable("CauhinhthongsoXNSLSSs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucCauhinhDichvuSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhmucDichvuSLSSId")
                        .HasColumnType("int");

                    b.Property<int?>("DanhmucDonvitinhSLSSId")
                        .HasColumnType("int");

                    b.Property<int?>("DanhmucThongsoXNSLSSId")
                        .HasColumnType("int");

                    b.Property<string>("GiaTriMacDinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriMaxNam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriMaxNu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriMinNam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriMinNu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriTBNam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaTriTBNu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDichVuSLSS")
                        .HasColumnType("int");

                    b.Property<int>("IdDonViTinh")
                        .HasColumnType("int");

                    b.Property<int>("IdThongSoXetNghiemSLSS")
                        .HasColumnType("int");

                    b.Property<int>("LamTron")
                        .HasColumnType("int");

                    b.Property<string>("NguyCoCao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguyCoCaoEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguyCoThap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguyCoThapEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DanhmucDichvuSLSSId");

                    b.HasIndex("DanhmucDonvitinhSLSSId");

                    b.HasIndex("DanhmucThongsoXNSLSSId");

                    b.ToTable("DanhmucCauhinhDichvuSLSS");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucChitietGoiDVSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdDichVuSLSS")
                        .HasColumnType("int");

                    b.Property<int>("IdGoiDichVuSLSS")
                        .HasColumnType("int");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDichVuSLSS");

                    b.HasIndex("IdGoiDichVuSLSS");

                    b.ToTable("DanhmucChitietGoiDVSLSSs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucChitietThongsoDichvuSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdDichVuSLSS")
                        .HasColumnType("int");

                    b.Property<int>("IdThongSoXetNghiemSLSS")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDichVuSLSS");

                    b.HasIndex("IdThongSoXetNghiemSLSS");

                    b.ToTable("DanhmucChitietThongsoDichvuSLSSs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucChitietgoiXNTrungtamSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ChietKhau")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdGoiDichVuSLSS")
                        .HasColumnType("int");

                    b.Property<int>("IdTrungTam")
                        .HasColumnType("int");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdGoiDichVuSLSS");

                    b.HasIndex("IdTrungTam");

                    b.ToTable("DanhmucChitietgoiXNTrungtamSLSSs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucChuongtrinhSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaChuongTrinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenChuongTrinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DanhmucChuongtrinhSLSSs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucDichvuSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaDichVuSLSS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaDichVuSLSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<string>("TenDichVuSLSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("TenHienThiDichVuSLSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ThongTinDichVuSLSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("isXNL2")
                        .HasColumnType("bit");

                    b.Property<bool>("isXNLai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DanhmucDichvuSLSSs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucDieukienSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenDieuKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TenVietTat")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DanhmucDieukienSLSSs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucDonvitinhSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenDVT")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("DanhmucDonvitinhSLSSs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucGoiDVSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("GiaGoiDichVuSLSS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaGoiDichVuSLSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TenGoiDichVuSLSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("DanhmucGoiDVSLSSs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucSosanhSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenDonViSoSanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("DanhmucSosanhSLSSs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucThongsoXNSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdTrungTam")
                        .HasColumnType("int");

                    b.Property<string>("MaThongSoXetNghiemSLSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TenHienThiThongSoXetNghiemSLSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("TenThongSoXetNghiemSLSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdTrungTam");

                    b.ToTable("DanhmucThongsoXNSLSSs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucchitietGoiXNDVCSSLSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ChietKhau")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdDVCS")
                        .HasColumnType("int");

                    b.Property<int>("IdGoiDichVuSLSS")
                        .HasColumnType("int");

                    b.Property<int>("IdTrungTam")
                        .HasColumnType("int");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDVCS");

                    b.HasIndex("IdGoiDichVuSLSS");

                    b.HasIndex("IdTrungTam");

                    b.ToTable("DanhmucchitietGoiXNDVCSSLSSs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucUser.DanhmucChitietQuyenNguoidung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhmucNguoidungId")
                        .HasColumnType("int");

                    b.Property<int?>("DanhmucQuyenId")
                        .HasColumnType("int");

                    b.Property<int>("IdQuyen")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DanhmucNguoidungId");

                    b.HasIndex("DanhmucQuyenId");

                    b.ToTable("DanhmucChitietQuyenNguoidung");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucUser.DanhmucLoaiNguoidung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhmucNhomNguoidungId")
                        .HasColumnType("int");

                    b.Property<int>("IdNhomUser")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoaiUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DanhmucNhomNguoidungId");

                    b.ToTable("DanhmucLoaiNguoidung");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucUser.DanhmucNguoidung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhmucLoaiNguoidungId")
                        .HasColumnType("int");

                    b.Property<int>("IdLoaiUser")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DanhmucLoaiNguoidungId");

                    b.ToTable("DanhmucNguoidung");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucUser.DanhmucNhomNguoidung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhomUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhmucNhomNguoidung");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucUser.DanhmucNhomQuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhomQuyen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhmucNhomQuyen");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucUser.DanhmucQuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhmucNhomQuyenId")
                        .HasColumnType("int");

                    b.Property<int>("IdNhomQuyen")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenQuyen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DanhmucNhomQuyenId");

                    b.ToTable("DanhmucQuyen");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.ChitietDanhgiaChatluongmau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdChatLuongMau")
                        .HasColumnType("int");

                    b.Property<string>("TenLyDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("IdChatLuongMau");

                    b.ToTable("ChitietDanhgiaChatluongmaus");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhMucLoaiTiepNhan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenLoaiTiepNhan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhMucLoaiTiepNhan");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhMucTrangThaiMau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("STT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTrangThaiMau")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhMucTrangThaiMau");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucChauluc", b =>
                {
                    b.Property<int>("IdChauLuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<string>("TenChauLuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("IdChauLuc");

                    b.ToTable("DanhmucChaulucs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucChedodinhduong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenCheDoDinhDuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DanhmucChedodinhduongs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucChicuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChiChiCuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("IdTongCuc")
                        .HasColumnType("int");

                    b.Property<string>("MaChiCuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("SDTChiCuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TenChiCuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("IdTongCuc");

                    b.ToTable("DanhmucChicucs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucDanhgiaChatluongMau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaChatLuongMau")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TenChatLuongMau")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DanhmucDanhgiaChatluongMaus");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucDantoc", b =>
                {
                    b.Property<int>("IdDanToc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdQuocGia")
                        .HasColumnType("int");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<string>("TenDanToc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("IdDanToc");

                    b.HasIndex("IdQuocGia");

                    b.ToTable("DanhmucDantocs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucDonviChuyenphat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaDVCP")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTrungTam")
                        .HasColumnType("int");

                    b.Property<string>("MaDVCP")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("SDTDVCP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDTNguoiDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TenDVCP")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("TenNguoiDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("IdTrungTam");

                    b.ToTable("DanhmucDonviChuyenphats");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucDonvicoso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChiDVCS")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EmailDVCS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdChiCuc")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDVCS")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("SDTDVCS")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<string>("TenBacSiDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDVCS")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdChiCuc");

                    b.ToTable("DanhmucDonvicosos");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucPhuongphapsinh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenPhuongPhapSinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("DanhmucPhuongphapsinh");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucPhuongxa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNhanVien")
                        .HasColumnType("int");

                    b.Property<int>("IdQuanHuyen")
                        .HasColumnType("int");

                    b.Property<string>("MaPhuongXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<string>("TenPhuongXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("TenVietTat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdQuanHuyen");

                    b.ToTable("DanhmucPhuongxas");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucQuanhuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNhanVien")
                        .HasColumnType("int");

                    b.Property<int>("IdTinhThanhPho")
                        .HasColumnType("int");

                    b.Property<string>("MaQuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<string>("TenQuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("IdTinhThanhPho");

                    b.ToTable("DanhmucQuanhuyens");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucQuocgia", b =>
                {
                    b.Property<int>("IdQuocGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdChauLuc")
                        .HasColumnType("int");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<string>("TenQuocGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("IdQuocGia");

                    b.HasIndex("IdChauLuc");

                    b.ToTable("DanhmucQuocgias");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucTinhtrang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenTinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DanhmucTinhtrangs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucTongcuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChiTongCuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EmailTongCuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaTongCuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("SDTTongCuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TenTongCuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("DanhmucTongcucs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucTrungtam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChiTrungTam")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EmailTrungTam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaTrungTam")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MaVietTat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDTTrungTam")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TenTrungTam")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("isCapMaXNTheoMaPhieu")
                        .HasColumnType("bit");

                    b.Property<bool>("isChoThuLaiMauLan2")
                        .HasColumnType("bit");

                    b.Property<bool>("isChoXNLan2")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DanhmucTrungtams");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucVattu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DonViTinh")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenVatTu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhmucVattus");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucVitrilaymau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenViTriLayMau")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DanhmucVitrilaymaus");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.Danhmuctinhthanhpho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNhanVien")
                        .HasColumnType("int");

                    b.Property<int>("IdQuocGia")
                        .HasColumnType("int");

                    b.Property<string>("MaTinhThanhPho")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenTinhThanhPho")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("IdQuocGia");

                    b.ToTable("Danhmuctinhthanhphos");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.MapDVCS_DVCP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdDVCP")
                        .HasColumnType("int");

                    b.Property<int>("IdDVCS")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDVCP");

                    b.HasIndex("IdDVCS");

                    b.ToTable("MapDVCS_DVCPs");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.MapDonvicosoTrungtam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdDVCS")
                        .HasColumnType("int");

                    b.Property<int>("IdTrungTam")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDVCS");

                    b.HasIndex("IdTrungTam");

                    b.ToTable("MapDonvicosoTrungtams");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucKhachhang.DanhMucThongTinNguoiThan", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucKhachhang.DanhmucThongtinKhachhang", "DanhmucThongtinKhachhang")
                        .WithMany("DanhMucThongTinNguoiThan")
                        .HasForeignKey("IdKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.DanhmucKhachhang.DanhmucLoainguoithan", "DanhmucLoainguoithan")
                        .WithMany("DanhMucThongTinNguoiThan")
                        .HasForeignKey("IdLoaiNguoiThan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucPhuongxa", "DanhmucPhuongxa")
                        .WithMany("DanhMucThongTinNguoiThan")
                        .HasForeignKey("IdPhuongXa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucKhachhang.DanhmucThongtinKhachhang", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucPhuongphapsinh", "DanhmucPhuongphapsinh")
                        .WithMany("DanhmucThongtinKhachhang")
                        .HasForeignKey("IdPhuongPhapSinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucPhuongxa", "DanhmucPhuongxa")
                        .WithMany("DanhmucThongtinKhachhang")
                        .HasForeignKey("IdPhuongXa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucChiTietDanhGiaChatLuongMau", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucDanhGiaChatLuongMauNghiepVu", "DanhMucDanhGiaChatLuongMauNghiepVu")
                        .WithMany("DanhMucChiTietDanhGiaChatLuongMau")
                        .HasForeignKey("DanhMucDanhGiaChatLuongMauNghiepVuId");

                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucDanhgiaChatluongMau", "DanhmucDanhgiaChatluongMau")
                        .WithMany("DanhMucChiTietDanhGiaChatLuongMau")
                        .HasForeignKey("DanhmucDanhgiaChatluongMauId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucChiTietKetQuaThongSoXN", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucChiTietKetQuaXN_SLSS", "DanhMucChiTietKetQuaXN_SLSS")
                        .WithMany("DanhMucChiTietKetQuaThongSoXN")
                        .HasForeignKey("DanhMucChiTietKetQuaXN_SLSSId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucChiTietKetQuaXN_SLSS", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucKetQuaXN_SLSS", "DanhMucKetQuaXN_SLSS")
                        .WithMany("DanhMucChiTietKetQuaXN_SLSS")
                        .HasForeignKey("DanhMucKetQuaXN_SLSSId");

                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucDichvuSLSS", "DanhmucDichvuSLSS")
                        .WithMany("DanhMucChiTietKetQuaXN_SLSS")
                        .HasForeignKey("DanhmucDichvuSLSSId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucDanhGiaChatLuongMauNghiepVu", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucTiepNhan", "DanhMucTiepNhan")
                        .WithMany("DanhMucDanhGiaChatLuongMauNghiepVu")
                        .HasForeignKey("DanhMucTiepNhanId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucKetQuaXN_SLSS", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucUser.DanhmucNguoidung", "DanhmucNguoidung")
                        .WithMany("DanhMucKetQuaXN_SLSS")
                        .HasForeignKey("DanhmucNguoidungId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucPhieuSangLoc", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhMucTrangThaiMau", "DanhMucTrangThaiMau")
                        .WithMany("DanhMucPhieuSangLoc")
                        .HasForeignKey("DanhMucTrangThaiMauId");

                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucChedodinhduong", "DanhmucChedodinhduong")
                        .WithMany("DanhMucPhieuSangLoc")
                        .HasForeignKey("DanhmucChedodinhduongId");

                    b.HasOne("BioNet.Entities.Entities.DanhmucUser.DanhmucNguoidung", null)
                        .WithMany("DanhMucPhieuSangLoc")
                        .HasForeignKey("DanhmucNguoidungId");

                    b.HasOne("BioNet.Entities.Entities.DanhmucKhachhang.DanhmucThongtinKhachhang", "DanhmucThongtinKhachhang")
                        .WithMany("DanhMucPhieuSangLoc")
                        .HasForeignKey("DanhmucThongtinKhachhangId");

                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucTinhtrang", "DanhmucTinhtrang")
                        .WithMany("DanhMucPhieuSangLoc")
                        .HasForeignKey("DanhmucTinhtrangId");

                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucVitrilaymau", "DanhmucVitrilaymau")
                        .WithMany("DanhMucPhieuSangLoc")
                        .HasForeignKey("DanhmucVitrilaymauId");

                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.MapDonvicosoTrungtam", "MapDonvicosoTrungtam")
                        .WithMany("DanhMucPhieuSangLoc")
                        .HasForeignKey("MapDonvicosoTrungtamId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucTiepNhan", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhMucLoaiTiepNhan", "DanhMucLoaiTiepNhan")
                        .WithMany("DanhMucTiepNhan")
                        .HasForeignKey("DanhMucLoaiTiepNhanId");

                    b.HasOne("BioNet.Entities.Entities.DanhmucNghiepvu.DanhMucPhieuSangLoc", "DanhMucPhieuSangLoc")
                        .WithMany("DanhMucTiepNhan")
                        .HasForeignKey("DanhMucPhieuSangLocId");

                    b.HasOne("BioNet.Entities.Entities.DanhmucUser.DanhmucNguoidung", "DanhmucNguoidung")
                        .WithMany("DanhMucTiepNhan")
                        .HasForeignKey("DanhmucNguoidungId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucChitietGoiDVXNPatientCare", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucDichvuPatientCare", null)
                        .WithMany("DanhmucChitietGoiDVXNPatientCare")
                        .HasForeignKey("DanhmucDichvuPatientCareId");

                    b.HasOne("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucDichvuXNPatientCare", "DanhmucDichvuXNPatientCare")
                        .WithMany("DanhmucChitietGoiDVXNPatientCare")
                        .HasForeignKey("IdDichVuXetNghiemNP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucGoiXNTheobenhPatientCare", "DanhmucGoiXNTheobenhPatientCare")
                        .WithMany("DanhmucChitietGoiDVXNPatientCare")
                        .HasForeignKey("IdGoiXetNghiemP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucDichvuXNPatientCare", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucNhomXNPatientCare", "DanhmucNhomXNPatientCare")
                        .WithMany("DanhmucDichvuXNPatientCare")
                        .HasForeignKey("IdNhomXetNghiemP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucGoiXNTheobenhPatientCare", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucDichvuPatientCare", "DanhmucDichvuPatientCare")
                        .WithMany("DanhmucGoiXNTheobenhPatientCare")
                        .HasForeignKey("IdDichVuP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucLoaiXNPatientCare", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucMenuXNPatientCare", "DanhmucMenuXNPatientCare")
                        .WithMany("DanhmucLoaiXNPatientCare")
                        .HasForeignKey("IdMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucNhomXNPatientCare", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucLoaiXNPatientCare", "DanhmucLoaiXNPatientCare")
                        .WithMany("DanhmucNhomXNPatientCare")
                        .HasForeignKey("IdLoaiXetNghiemP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucThongsoXNDichvuPatientCare", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucDichvuXNPatientCare", "DanhmucDichvuXNPatientCare")
                        .WithMany("DanhmucThongsoXNDichvuPatientCare")
                        .HasForeignKey("IdDichVuXetNghiemP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucDonvidoPatientCare", "DanhmucDonvidoPatientCare")
                        .WithMany("DanhmucThongsoXNDichvuPatientCare")
                        .HasForeignKey("IdDonViDoP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucThongsoXNPatientCare", "DanhmucThongsoXNPatientCare")
                        .WithMany("DanhmucThongsoXNDichvuPatientCare")
                        .HasForeignKey("IdThongSoXetNghiemP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucPatientCare.DanhmucThongsoXNPatientCare", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucTrungtam", null)
                        .WithMany("DanhmucThongsoXNPatientCare")
                        .HasForeignKey("DanhmucTrungtamId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.CauhinhthongsoXNSLSS", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucDieukienSLSS", "DanhmucDieukienSLSS")
                        .WithMany("CauhinhthongsoXNSLSS")
                        .HasForeignKey("IdDieuKien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucSosanhSLSS", "DanhmucSosanhSLSS")
                        .WithMany("CauhinhthongsoXNSLSS")
                        .HasForeignKey("IdSoSanh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucThongsoXNSLSS", "DanhmucThongsoXNSLSS")
                        .WithMany("CauhinhthongsoXNSLSS")
                        .HasForeignKey("IdThongSoXetNghiemSLSS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucCauhinhDichvuSLSS", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucDichvuSLSS", "DanhmucDichvuSLSS")
                        .WithMany("DanhmucCauhinhDichvuSLSS")
                        .HasForeignKey("DanhmucDichvuSLSSId");

                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucDonvitinhSLSS", "DanhmucDonvitinhSLSS")
                        .WithMany("DanhmucCauhinhDichvuSLSS")
                        .HasForeignKey("DanhmucDonvitinhSLSSId");

                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucThongsoXNSLSS", "DanhmucThongsoXNSLSS")
                        .WithMany("DanhmucCauhinhDichvuSLSS")
                        .HasForeignKey("DanhmucThongsoXNSLSSId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucChitietGoiDVSLSS", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucDichvuSLSS", "DanhmucDichvuSLSS")
                        .WithMany("DanhmucChitietGoiDVSLSS")
                        .HasForeignKey("IdDichVuSLSS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucGoiDVSLSS", "DanhmucGoiDVSLSS")
                        .WithMany("DanhmucChitietGoiDVSLSS")
                        .HasForeignKey("IdGoiDichVuSLSS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucChitietThongsoDichvuSLSS", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucDichvuSLSS", "DanhmucDichvuSLSS")
                        .WithMany("DanhmucChitietThongsoDichvuSLSS")
                        .HasForeignKey("IdDichVuSLSS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucThongsoXNSLSS", "DanhmucThongsoXNSLSS")
                        .WithMany("DanhmucChitietThongsoDichvuSLSS")
                        .HasForeignKey("IdThongSoXetNghiemSLSS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucChitietgoiXNTrungtamSLSS", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucGoiDVSLSS", "DanhmucGoiDVSLSS")
                        .WithMany("DanhmucChitietgoiXNTrungtamSLSS")
                        .HasForeignKey("IdGoiDichVuSLSS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucTrungtam", "DanhmucTrungtam")
                        .WithMany("DanhmucChitietgoiXNTrungtamSLSS")
                        .HasForeignKey("IdTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucThongsoXNSLSS", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucTrungtam", "DanhmucTrungtam")
                        .WithMany("DanhmucThongsoXNSLSS")
                        .HasForeignKey("IdTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucchitietGoiXNDVCSSLSS", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucDonvicoso", "DanhmucDonvicoso")
                        .WithMany("DanhmucchitietGoiXNDVCSSLSS")
                        .HasForeignKey("IdDVCS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.DanhmucSanglocsosinh.DanhmucGoiDVSLSS", "DanhmucGoiDVSLSS")
                        .WithMany("DanhmucchitietGoiXNDVCSSLSS")
                        .HasForeignKey("IdGoiDichVuSLSS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucTrungtam", "DanhmucTrungtam")
                        .WithMany("DanhmucchitietGoiXNDVCSSLSS")
                        .HasForeignKey("IdTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucUser.DanhmucChitietQuyenNguoidung", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucUser.DanhmucNguoidung", "DanhmucNguoidung")
                        .WithMany("DanhmucChitietQuyenNguoidung")
                        .HasForeignKey("DanhmucNguoidungId");

                    b.HasOne("BioNet.Entities.Entities.DanhmucUser.DanhmucQuyen", "DanhmucQuyen")
                        .WithMany("DanhmucChitietQuyenNguoidung")
                        .HasForeignKey("DanhmucQuyenId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucUser.DanhmucLoaiNguoidung", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucUser.DanhmucNhomNguoidung", "DanhmucNhomNguoidung")
                        .WithMany("DanhmucLoaiNguoidung")
                        .HasForeignKey("DanhmucNhomNguoidungId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucUser.DanhmucNguoidung", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucUser.DanhmucLoaiNguoidung", "DanhmucLoaiNguoidung")
                        .WithMany("DanhmucNguoidung")
                        .HasForeignKey("DanhmucLoaiNguoidungId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.DanhmucUser.DanhmucQuyen", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.DanhmucUser.DanhmucNhomQuyen", "DanhmucNhomQuyen")
                        .WithMany("DanhmucQuyen")
                        .HasForeignKey("DanhmucNhomQuyenId");
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.ChitietDanhgiaChatluongmau", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucDanhgiaChatluongMau", "DanhmucDanhgiaChatluongMau")
                        .WithMany("ChitietDanhgiaChatluongmau")
                        .HasForeignKey("IdChatLuongMau")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucChicuc", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucTongcuc", "DanhmucTongcuc")
                        .WithMany("DanhmucChicuc")
                        .HasForeignKey("IdTongCuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucDantoc", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucQuocgia", "DanhmucQuocgia")
                        .WithMany("DanhmucDantoc")
                        .HasForeignKey("IdQuocGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucDonviChuyenphat", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucTrungtam", "DanhmucTrungtam")
                        .WithMany("DanhmucDonviChuyenphat")
                        .HasForeignKey("IdTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucDonvicoso", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucChicuc", "DanhmucChicuc")
                        .WithMany("DanhmucDonvicoso")
                        .HasForeignKey("IdChiCuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucPhuongxa", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucQuanhuyen", "DanhmucQuanhuyen")
                        .WithMany("DanhmucPhuongxa")
                        .HasForeignKey("IdQuanHuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucQuanhuyen", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.Danhmuctinhthanhpho", "Danhmuctinhthanhpho")
                        .WithMany("DanhmucQuanhuyen")
                        .HasForeignKey("IdTinhThanhPho")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.DanhmucQuocgia", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucChauluc", "DanhmucChauluc")
                        .WithMany("DanhmucQuocgia")
                        .HasForeignKey("IdChauLuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.Danhmuctinhthanhpho", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucQuocgia", "DanhmucQuocgia")
                        .WithMany("Danhmuctinhthanhpho")
                        .HasForeignKey("IdQuocGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.MapDVCS_DVCP", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucDonviChuyenphat", "DanhmucDonviChuyenphat")
                        .WithMany("MapDonvicoso_DVCP")
                        .HasForeignKey("IdDVCP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucDonvicoso", "DanhmucDonvicoso")
                        .WithMany("MapDonvicoso_DVCP")
                        .HasForeignKey("IdDVCS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BioNet.Entities.Entities.Danhmucchung.MapDonvicosoTrungtam", b =>
                {
                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucDonvicoso", "DanhmucDonviCoso")
                        .WithMany("MapDonvicoso")
                        .HasForeignKey("IdDVCS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BioNet.Entities.Entities.Danhmucchung.DanhmucTrungtam", "DanhmucTrungtam")
                        .WithMany("MapTrungtam")
                        .HasForeignKey("IdTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
